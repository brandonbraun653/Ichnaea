"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import mbed_rpc_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AsyncMessageId:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AsyncMessageIdEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AsyncMessageId.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MSG_HEARTBEAT: _AsyncMessageId.ValueType  # 200

class AsyncMessageId(_AsyncMessageId, metaclass=_AsyncMessageIdEnumTypeWrapper):
    """Asynchronous messages that can be sent between nodes in the network and are not RPCs. Usually this is
    for system health monitoring and other non-critical messages occurring in the background. These messages
    start at 500 to avoid conflicts with the mbed_rpc.proto messages and ichnaea_rpc.proto messages.
    """

MSG_HEARTBEAT: AsyncMessageId.ValueType  # 200
global___AsyncMessageId = AsyncMessageId

class _AsyncMessageVersion:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AsyncMessageVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AsyncMessageVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MSG_VER_HEARTBEAT: _AsyncMessageVersion.ValueType  # 0
    """option allow_alias = true;"""

class AsyncMessageVersion(_AsyncMessageVersion, metaclass=_AsyncMessageVersionEnumTypeWrapper): ...

MSG_VER_HEARTBEAT: AsyncMessageVersion.ValueType  # 0
"""option allow_alias = true;"""
global___AsyncMessageVersion = AsyncMessageVersion

@typing.final
class Heartbeat(google.protobuf.message.Message):
    """MSG_HEARTBEAT"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    BOOT_COUNT_FIELD_NUMBER: builtins.int
    NODE_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    boot_count: builtins.int
    node_id: builtins.int
    timestamp: builtins.int
    @property
    def header(self) -> mbed_rpc_pb2.Header: ...
    def __init__(
        self,
        *,
        header: mbed_rpc_pb2.Header | None = ...,
        boot_count: builtins.int | None = ...,
        node_id: builtins.int | None = ...,
        timestamp: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["boot_count", b"boot_count", "header", b"header", "node_id", b"node_id", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["boot_count", b"boot_count", "header", b"header", "node_id", b"node_id", "timestamp", b"timestamp"]) -> None: ...

global___Heartbeat = Heartbeat
