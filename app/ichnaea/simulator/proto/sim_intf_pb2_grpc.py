# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import sim_intf_pb2 as sim__intf__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in sim_intf_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EnvironmentSpooferStub(object):
    """The EnvironmentSpoofer service is used to inject fake environmental data into
    the Ichnaea system. This is useful for testing the system in a controlled
    manner that might otherwise be destructive or difficult to reproduce on real
    hardware.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ApplyResistiveLoad = channel.unary_unary(
                '/sim.EnvironmentSpoofer/ApplyResistiveLoad',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetSolarOCV = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetSolarOCV',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoard12VRail = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoard12VRail',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoard5VRail = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoard5VRail',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoard3V3Rail = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoard3V3Rail',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoard1V1Rail = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoard1V1Rail',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoardTemperature = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoardTemperature',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetBoardFanSpeed = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetBoardFanSpeed',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetOutputVoltage = channel.unary_unary(
                '/sim.EnvironmentSpoofer/SetOutputVoltage',
                request_serializer=sim__intf__pb2.FloatingPointValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class EnvironmentSpooferServicer(object):
    """The EnvironmentSpoofer service is used to inject fake environmental data into
    the Ichnaea system. This is useful for testing the system in a controlled
    manner that might otherwise be destructive or difficult to reproduce on real
    hardware.
    """

    def ApplyResistiveLoad(self, request, context):
        """Apply a resistive load to the output of the power converter. The simulator
        will do some very basic calculations to draw the appropriate current from
        the power converter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSolarOCV(self, request, context):
        """Update the solar open circuit input voltage to the Ichnaea system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoard12VRail(self, request, context):
        """Set the voltage of the 12V rail on the board.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoard5VRail(self, request, context):
        """Set the voltage of the 5V rail on the board.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoard3V3Rail(self, request, context):
        """Set the voltage of the 3.3V rail on the board.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoard1V1Rail(self, request, context):
        """Set the voltage of the 1.1V rail on the board.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoardTemperature(self, request, context):
        """Set the temperature of the board in degrees Celsius.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoardFanSpeed(self, request, context):
        """Set the RPM of the fan on the board.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOutputVoltage(self, request, context):
        """Forcefully sets the measured output voltage of the power converter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentSpooferServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ApplyResistiveLoad': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyResistiveLoad,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetSolarOCV': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSolarOCV,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoard12VRail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoard12VRail,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoard5VRail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoard5VRail,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoard3V3Rail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoard3V3Rail,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoard1V1Rail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoard1V1Rail,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoardTemperature': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoardTemperature,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetBoardFanSpeed': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBoardFanSpeed,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetOutputVoltage': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOutputVoltage,
                    request_deserializer=sim__intf__pb2.FloatingPointValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sim.EnvironmentSpoofer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sim.EnvironmentSpoofer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EnvironmentSpoofer(object):
    """The EnvironmentSpoofer service is used to inject fake environmental data into
    the Ichnaea system. This is useful for testing the system in a controlled
    manner that might otherwise be destructive or difficult to reproduce on real
    hardware.
    """

    @staticmethod
    def ApplyResistiveLoad(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/ApplyResistiveLoad',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSolarOCV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetSolarOCV',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoard12VRail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoard12VRail',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoard5VRail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoard5VRail',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoard3V3Rail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoard3V3Rail',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoard1V1Rail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoard1V1Rail',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoardTemperature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoardTemperature',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBoardFanSpeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetBoardFanSpeed',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetOutputVoltage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sim.EnvironmentSpoofer/SetOutputVoltage',
            sim__intf__pb2.FloatingPointValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
