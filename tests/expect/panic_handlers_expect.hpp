/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include <CppUMockGen.hpp>

#include "../../src/system/panic_handlers.hpp"

#include <CppUTestExt/MockSupport.h>

namespace expect { namespace Panic$ { namespace Handlers$ {
MockExpectedCall& DefaultHandler(CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
MockExpectedCall& DefaultHandler(unsigned int __numCalls__, CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
} } }

namespace expect { namespace Panic$ { namespace Handlers$ {
MockExpectedCall& NoopHandler(CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
MockExpectedCall& NoopHandler(unsigned int __numCalls__, CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
} } }

namespace expect { namespace Panic$ { namespace Handlers$ {
MockExpectedCall& FailToReadBoardVersion(CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
MockExpectedCall& FailToReadBoardVersion(unsigned int __numCalls__, CppUMockGen::Parameter<const Panic::ErrorCode &> code, bool __return__);
} } }

