/*
 * This file has been auto-generated by CppUMockGen v0.6.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 *
 * Generation options: -s c++20
 */

#include "../../src/system/system_error.hpp"

#include <CppUTestExt/MockSupport.h>

void Panic::powerUp()
{
    mock().actualCall("Panic::powerUp");
}

bool Panic::throwError(const Panic::ErrorCode code)
{
    return mock().actualCall("Panic::throwError").withIntParameter("code", static_cast<int>(code)).returnBoolValue();
}

void Panic::assertion(const bool predicate, const Panic::ErrorCode code)
{
    mock().actualCall("Panic::assertion").withBoolParameter("predicate", predicate).withIntParameter("code", static_cast<int>(code));
}

Panic::ErrorCode Panic::getLastError()
{
    return static_cast<Panic::ErrorCode>(mock().actualCall("Panic::getLastError").returnIntValue());
}

void Panic::resetError()
{
    mock().actualCall("Panic::resetError");
}

void Panic::registerHandler(const Panic::ErrorCode code, Panic::ErrorCallback handler)
{
    mock().actualCall("Panic::registerHandler").withIntParameter("code", static_cast<int>(code)).withParameterOfType("Panic::ErrorCallback", "handler", &handler);
}

