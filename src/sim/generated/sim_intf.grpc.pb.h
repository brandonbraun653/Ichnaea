// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sim_intf.proto
#ifndef GRPC_sim_5fintf_2eproto__INCLUDED
#define GRPC_sim_5fintf_2eproto__INCLUDED

#include "sim_intf.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sim {

// The EnvironmentSpoofer service is used to inject fake environmental data into
// the Ichnaea system. This is useful for testing the system in a controlled
// manner that might otherwise be destructive or difficult to reproduce on real
// hardware.
class EnvironmentSpoofer final {
 public:
  static constexpr char const* service_full_name() {
    return "sim.EnvironmentSpoofer";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Apply a resistive load to the output of the power converter. The simulator
    // will do some very basic calculations to draw the appropriate current from
    // the power converter.
    virtual ::grpc::Status ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncApplyResistiveLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncApplyResistiveLoadRaw(context, request, cq));
    }
    // Update the solar open circuit input voltage to the Ichnaea system.
    virtual ::grpc::Status SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetSolarOCVRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetSolarOCVRaw(context, request, cq));
    }
    // Set the voltage of the 12V rail on the board.
    virtual ::grpc::Status SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoard12VRailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoard12VRailRaw(context, request, cq));
    }
    // Set the voltage of the 5V rail on the board.
    virtual ::grpc::Status SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoard5VRailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoard5VRailRaw(context, request, cq));
    }
    // Set the voltage of the 3.3V rail on the board.
    virtual ::grpc::Status SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoard3V3RailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoard3V3RailRaw(context, request, cq));
    }
    // Set the voltage of the 1.1V rail on the board.
    virtual ::grpc::Status SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoard1V1RailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoard1V1RailRaw(context, request, cq));
    }
    // Set the temperature of the board in degrees Celsius.
    virtual ::grpc::Status SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoardTemperatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoardTemperatureRaw(context, request, cq));
    }
    // Set the RPM of the fan on the board.
    virtual ::grpc::Status SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBoardFanSpeedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBoardFanSpeedRaw(context, request, cq));
    }
    // Forcefully sets the measured output voltage of the power converter.
    virtual ::grpc::Status SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetOutputVoltageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetOutputVoltageRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Apply a resistive load to the output of the power converter. The simulator
      // will do some very basic calculations to draw the appropriate current from
      // the power converter.
      virtual void ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update the solar open circuit input voltage to the Ichnaea system.
      virtual void SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the voltage of the 12V rail on the board.
      virtual void SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the voltage of the 5V rail on the board.
      virtual void SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the voltage of the 3.3V rail on the board.
      virtual void SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the voltage of the 1.1V rail on the board.
      virtual void SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the temperature of the board in degrees Celsius.
      virtual void SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the RPM of the fan on the board.
      virtual void SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Forcefully sets the measured output voltage of the power converter.
      virtual void SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncApplyResistiveLoadRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncApplyResistiveLoadRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetSolarOCVRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetSolarOCVRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoard12VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoard12VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoard5VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoard5VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoard3V3RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoard3V3RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoard1V1RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoard1V1RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoardTemperatureRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoardTemperatureRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBoardFanSpeedRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBoardFanSpeedRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetOutputVoltageRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetOutputVoltageRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncApplyResistiveLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncApplyResistiveLoadRaw(context, request, cq));
    }
    ::grpc::Status SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetSolarOCVRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetSolarOCVRaw(context, request, cq));
    }
    ::grpc::Status SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoard12VRailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoard12VRailRaw(context, request, cq));
    }
    ::grpc::Status SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoard5VRailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoard5VRailRaw(context, request, cq));
    }
    ::grpc::Status SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoard3V3RailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoard3V3RailRaw(context, request, cq));
    }
    ::grpc::Status SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoard1V1RailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoard1V1RailRaw(context, request, cq));
    }
    ::grpc::Status SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoardTemperatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoardTemperatureRaw(context, request, cq));
    }
    ::grpc::Status SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBoardFanSpeedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBoardFanSpeedRaw(context, request, cq));
    }
    ::grpc::Status SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetOutputVoltageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetOutputVoltageRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ApplyResistiveLoad(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetSolarOCV(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoard12VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoard5VRail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoard3V3Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoard1V1Rail(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoardTemperature(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoardFanSpeed(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetOutputVoltage(::grpc::ClientContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncApplyResistiveLoadRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncApplyResistiveLoadRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetSolarOCVRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetSolarOCVRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoard12VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoard12VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoard5VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoard5VRailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoard3V3RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoard3V3RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoard1V1RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoard1V1RailRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoardTemperatureRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoardTemperatureRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBoardFanSpeedRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBoardFanSpeedRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetOutputVoltageRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetOutputVoltageRaw(::grpc::ClientContext* context, const ::sim::FloatingPointValue& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ApplyResistiveLoad_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSolarOCV_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoard12VRail_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoard5VRail_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoard3V3Rail_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoard1V1Rail_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoardTemperature_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoardFanSpeed_;
    const ::grpc::internal::RpcMethod rpcmethod_SetOutputVoltage_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Apply a resistive load to the output of the power converter. The simulator
    // will do some very basic calculations to draw the appropriate current from
    // the power converter.
    virtual ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Update the solar open circuit input voltage to the Ichnaea system.
    virtual ::grpc::Status SetSolarOCV(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the voltage of the 12V rail on the board.
    virtual ::grpc::Status SetBoard12VRail(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the voltage of the 5V rail on the board.
    virtual ::grpc::Status SetBoard5VRail(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the voltage of the 3.3V rail on the board.
    virtual ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the voltage of the 1.1V rail on the board.
    virtual ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the temperature of the board in degrees Celsius.
    virtual ::grpc::Status SetBoardTemperature(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Set the RPM of the fan on the board.
    virtual ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
    // Forcefully sets the measured output voltage of the power converter.
    virtual ::grpc::Status SetOutputVoltage(::grpc::ServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestApplyResistiveLoad(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSolarOCV(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard12VRail(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard5VRail(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard3V3Rail(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard1V1Rail(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardTemperature(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardFanSpeed(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetOutputVoltage(::grpc::ServerContext* context, ::sim::FloatingPointValue* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ApplyResistiveLoad<WithAsyncMethod_SetSolarOCV<WithAsyncMethod_SetBoard12VRail<WithAsyncMethod_SetBoard5VRail<WithAsyncMethod_SetBoard3V3Rail<WithAsyncMethod_SetBoard1V1Rail<WithAsyncMethod_SetBoardTemperature<WithAsyncMethod_SetBoardFanSpeed<WithAsyncMethod_SetOutputVoltage<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->ApplyResistiveLoad(context, request, response); }));}
    void SetMessageAllocatorFor_ApplyResistiveLoad(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ApplyResistiveLoad(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetSolarOCV(context, request, response); }));}
    void SetMessageAllocatorFor_SetSolarOCV(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSolarOCV(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoard12VRail(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoard12VRail(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard12VRail(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoard5VRail(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoard5VRail(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard5VRail(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoard3V3Rail(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoard3V3Rail(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard3V3Rail(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoard1V1Rail(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoard1V1Rail(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard1V1Rail(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoardTemperature(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoardTemperature(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardTemperature(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetBoardFanSpeed(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoardFanSpeed(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardFanSpeed(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sim::FloatingPointValue* request, ::google::protobuf::Empty* response) { return this->SetOutputVoltage(context, request, response); }));}
    void SetMessageAllocatorFor_SetOutputVoltage(
        ::grpc::MessageAllocator< ::sim::FloatingPointValue, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sim::FloatingPointValue, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetOutputVoltage(
      ::grpc::CallbackServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ApplyResistiveLoad<WithCallbackMethod_SetSolarOCV<WithCallbackMethod_SetBoard12VRail<WithCallbackMethod_SetBoard5VRail<WithCallbackMethod_SetBoard3V3Rail<WithCallbackMethod_SetBoard1V1Rail<WithCallbackMethod_SetBoardTemperature<WithCallbackMethod_SetBoardFanSpeed<WithCallbackMethod_SetOutputVoltage<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestApplyResistiveLoad(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSolarOCV(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard12VRail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard5VRail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard3V3Rail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoard1V1Rail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardTemperature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoardFanSpeed(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetOutputVoltage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ApplyResistiveLoad(context, request, response); }));
    }
    ~WithRawCallbackMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ApplyResistiveLoad(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSolarOCV(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSolarOCV(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoard12VRail(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard12VRail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoard5VRail(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard5VRail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoard3V3Rail(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard3V3Rail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoard1V1Rail(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoard1V1Rail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoardTemperature(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardTemperature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoardFanSpeed(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoardFanSpeed(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetOutputVoltage(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetOutputVoltage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ApplyResistiveLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ApplyResistiveLoad() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedApplyResistiveLoad(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ApplyResistiveLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ApplyResistiveLoad(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedApplyResistiveLoad(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSolarOCV : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSolarOCV() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetSolarOCV(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSolarOCV() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSolarOCV(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSolarOCV(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoard12VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoard12VRail() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoard12VRail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoard12VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoard12VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoard12VRail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoard5VRail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoard5VRail() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoard5VRail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoard5VRail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoard5VRail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoard5VRail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoard3V3Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoard3V3Rail() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoard3V3Rail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoard3V3Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoard3V3Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoard3V3Rail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoard1V1Rail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoard1V1Rail() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoard1V1Rail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoard1V1Rail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoard1V1Rail(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoard1V1Rail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoardTemperature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoardTemperature() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoardTemperature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoardTemperature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoardTemperature(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoardTemperature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoardFanSpeed : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoardFanSpeed() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBoardFanSpeed(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoardFanSpeed() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoardFanSpeed(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoardFanSpeed(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetOutputVoltage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetOutputVoltage() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sim::FloatingPointValue, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sim::FloatingPointValue, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetOutputVoltage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetOutputVoltage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetOutputVoltage(::grpc::ServerContext* /*context*/, const ::sim::FloatingPointValue* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetOutputVoltage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sim::FloatingPointValue,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ApplyResistiveLoad<WithStreamedUnaryMethod_SetSolarOCV<WithStreamedUnaryMethod_SetBoard12VRail<WithStreamedUnaryMethod_SetBoard5VRail<WithStreamedUnaryMethod_SetBoard3V3Rail<WithStreamedUnaryMethod_SetBoard1V1Rail<WithStreamedUnaryMethod_SetBoardTemperature<WithStreamedUnaryMethod_SetBoardFanSpeed<WithStreamedUnaryMethod_SetOutputVoltage<Service > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ApplyResistiveLoad<WithStreamedUnaryMethod_SetSolarOCV<WithStreamedUnaryMethod_SetBoard12VRail<WithStreamedUnaryMethod_SetBoard5VRail<WithStreamedUnaryMethod_SetBoard3V3Rail<WithStreamedUnaryMethod_SetBoard1V1Rail<WithStreamedUnaryMethod_SetBoardTemperature<WithStreamedUnaryMethod_SetBoardFanSpeed<WithStreamedUnaryMethod_SetOutputVoltage<Service > > > > > > > > > StreamedService;
};

}  // namespace sim


#endif  // GRPC_sim_5fintf_2eproto__INCLUDED
