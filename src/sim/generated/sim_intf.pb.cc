// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sim_intf.proto
// Protobuf C++ Version: 5.27.2

#include "sim_intf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sim {

inline constexpr FloatingPointValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FloatingPointValue::FloatingPointValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FloatingPointValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatingPointValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatingPointValueDefaultTypeInternal() {}
  union {
    FloatingPointValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatingPointValueDefaultTypeInternal _FloatingPointValue_default_instance_;
}  // namespace sim
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_sim_5fintf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sim_5fintf_2eproto = nullptr;
const ::uint32_t
    TableStruct_sim_5fintf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sim::FloatingPointValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sim::FloatingPointValue, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sim::FloatingPointValue)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::sim::_FloatingPointValue_default_instance_._instance,
};
const char descriptor_table_protodef_sim_5fintf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016sim_intf.proto\022\003sim\032\033google/protobuf/e"
    "mpty.proto\"#\n\022FloatingPointValue\022\r\n\005valu"
    "e\030\001 \001(\0022\216\005\n\022EnvironmentSpoofer\022G\n\022ApplyR"
    "esistiveLoad\022\027.sim.FloatingPointValue\032\026."
    "google.protobuf.Empty\"\000\022@\n\013SetSolarOCV\022\027"
    ".sim.FloatingPointValue\032\026.google.protobu"
    "f.Empty\"\000\022D\n\017SetBoard12VRail\022\027.sim.Float"
    "ingPointValue\032\026.google.protobuf.Empty\"\000\022"
    "C\n\016SetBoard5VRail\022\027.sim.FloatingPointVal"
    "ue\032\026.google.protobuf.Empty\"\000\022D\n\017SetBoard"
    "3V3Rail\022\027.sim.FloatingPointValue\032\026.googl"
    "e.protobuf.Empty\"\000\022D\n\017SetBoard1V1Rail\022\027."
    "sim.FloatingPointValue\032\026.google.protobuf"
    ".Empty\"\000\022H\n\023SetBoardTemperature\022\027.sim.Fl"
    "oatingPointValue\032\026.google.protobuf.Empty"
    "\"\000\022E\n\020SetBoardFanSpeed\022\027.sim.FloatingPoi"
    "ntValue\032\026.google.protobuf.Empty\"\000\022E\n\020Set"
    "OutputVoltage\022\027.sim.FloatingPointValue\032\026"
    ".google.protobuf.Empty\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sim_5fintf_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_sim_5fintf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sim_5fintf_2eproto = {
    false,
    false,
    752,
    descriptor_table_protodef_sim_5fintf_2eproto,
    "sim_intf.proto",
    &descriptor_table_sim_5fintf_2eproto_once,
    descriptor_table_sim_5fintf_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_sim_5fintf_2eproto::offsets,
    file_level_enum_descriptors_sim_5fintf_2eproto,
    file_level_service_descriptors_sim_5fintf_2eproto,
};
namespace sim {
// ===================================================================

class FloatingPointValue::_Internal {
 public:
};

FloatingPointValue::FloatingPointValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sim.FloatingPointValue)
}
FloatingPointValue::FloatingPointValue(
    ::google::protobuf::Arena* arena, const FloatingPointValue& from)
    : FloatingPointValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FloatingPointValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FloatingPointValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
FloatingPointValue::~FloatingPointValue() {
  // @@protoc_insertion_point(destructor:sim.FloatingPointValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloatingPointValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FloatingPointValue::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FloatingPointValue, _impl_._cached_size_),
              false,
          },
          &FloatingPointValue::MergeImpl,
          &FloatingPointValue::kDescriptorMethods,
          &descriptor_table_sim_5fintf_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FloatingPointValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FloatingPointValue_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sim::FloatingPointValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FloatingPointValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(FloatingPointValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FloatingPointValue::Clear() {
// @@protoc_insertion_point(message_clear_start:sim.FloatingPointValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FloatingPointValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim.FloatingPointValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim.FloatingPointValue)
  return target;
}

::size_t FloatingPointValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim.FloatingPointValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FloatingPointValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FloatingPointValue*>(&to_msg);
  auto& from = static_cast<const FloatingPointValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sim.FloatingPointValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatingPointValue::CopyFrom(const FloatingPointValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim.FloatingPointValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FloatingPointValue::InternalSwap(FloatingPointValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata FloatingPointValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_sim_5fintf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
